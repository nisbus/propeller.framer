using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Windows.Input;

namespace nisbus.Propeller.Demo.Utils
{
    public class KeyTranslator
    {
        public static string Translate(List<bool> keys)
        {
            switch (BoolsToString(keys))
            {
                case "00000001":
                    return "a";
                case "00000010":
                    return "b";
                case "00000100":
                    return "c";
                case "00000011":
                    return "d";
                case "00000101":
                    return "e";
                case "00000111":
                    return "f";
                case "00000110":
                    return "g";
                case "00001000":
                    return "ENTER";
                case "00001001":
                    return "i";
                case "00001010":
                    return "j";
                case "00001011":
                    return "k";
                case "00001100":
                    return "l";
                case "00001101":
                    return "m";
                case "00001110":
                    return "n";
                case "00001111":
                    return "o";
                case "00010000":
                    return "SPACE";
                case "00010001":
                    return "q";
                case "00010010":
                    return "r";
                case "00010011":
                    return "s";
                case "00010100":
                    return "t";
                case "00010101":
                    return "u";
                case "00010110":
                    return "v";
                case "00010111":
                    return "x";
                case "00011000":
                    return "BACKSPACE";
                case "00011001":
                    return "z";
                case "00011010":
                    return "A";
                case "00011011":
                    return "B";
                case "00011100":
                    return "C";
                case "00011101":
                    return "D";
                case "00011110":
                    return "E";
                case "00011111":
                    return "F";
                case "00100000":
                    return "G";
                case "00100001":
                    return "H";
                case "00100010":
                    return "I";
                case "00100011":
                    return "J";
                case "00100100":
                    return "K";
                case "00100101":
                    return "L";
                case "00100110":
                    return "M";
                case "00100111":
                    return "N";
                case "00101000":
                    return "O";
                case "00101001":
                    return "P";
                case "00101010":
                    return "Q";
                case "00101011":
                    return "R";
                case "00101100":
                    return "S";
                case "00101101":
                    return "T";
                case "00101110":
                    return "U";
                case "00101111":
                    return "V";
                case "00110000":
                    return "X";
                case "00110001":
                    return "Y";
                case "00110010":
                    return "Z";
                case "00110011":
                    return "1";
                case "00110100":
                    return "2";
                case "00110101":
                    return "3";
                case "00110110":
                    return "4";
                case "00110111":
                    return "5";
                case "00111000":
                    return "6";
                case "00111001":
                    return "7";
                case "00111010":
                    return "8";
                case "00111011":
                    return "9";
                case "00111100":
                    return "0";
                case "00111101":
                    return "-";
                case "00111110":
                    return "+";
                case "00111111":
                    return "*";
                case "01000000":
                    return "/";
                case "01000001":
                    return "!";
                case "01000010":
                    return "\"";
                case "01000011":
                    return "#";
                case "01000100":
                    return "$";
                case "01000101":
                    return "%";
                case "01000110":
                    return "^";
                case "01000111":
                    return "&";
                case "01001000":
                    return "(";
                case "01001001":
                    return ")";
                case "01001010":
                    return "=";
                case "01001011":
                    return "_";
                case "01001100":
                    return "°";
                case "01001101":
                    return "¨";
                case "01001110":
                    return ";";
                case "01001111":
                    return ":";
                case "01010000":
                    return "´";
                case "01010001":
                    return "'";
                case "01010010":
                    return "€";
                case "01010011":
                    return "{";
                case "01010100":
                    return "[";
                case "01010101":
                    return "]";
                case "01010110":
                    return "}";
                case "01010111":
                    return "\\";
                case "01011000":
                    return "~";
                case "01011001":
                    return "<";
                case "01011010":
                    return ">";
                case "01011011":
                    return "?";
                case "01011100":
                    return "|";
                case "01011101":
                    return "PAGEUP";
                case "01011110":
                    return "PAGEDOWN";
                case "01011111":
                    return "UP";
                case "01100000":
                    return "LEFT";
                case "01100001":
                    return "DOWN";
                case "0110010":
                    return "RIGHT";
                case "01100011":
                    return "TAB";
                case "01100100":
                    return "p";
                case "01100101":
                    return "h";
                case "01100110":
                    return "FN";
                case "01100111":
                    return "RIGHT_MOUSE_DOWN";
                case "01101000":
                    return "HOME";
                case "01101001":
                    return "END";
                case "01101010":
                    return "INSERT";
                case "01101011":
                    return "DELETE";
                case "01101100":
                    return "y";
                case "01101101":
                    return "ESC";
                case "01101110":
                    return "F1";
                case "01101111":
                    return "F2";
                case "01110000":
                    return "F3";
                case "01110001":
                    return "F4";
                case "01110010":
                    return "F5";
                case "01110011":
                    return "F6";
                case "01110100":
                    return "F7";
                case "01110101":
                    return "F8";
                case "01110110":
                    return "F9";
                case "01110111":
                    return "F10";
                case "01111000":
                    return "F11";
                case "01111001":
                    return "F12";
                case "01111010":
                    return "PAUSE";
                case "01111011":
                    return "BREAK";
                case "01111100":
                    return "WINDOWS";
                case "01111101":
                    return "þ";
                case "01111110":
                    return "æ";
                case "0111111":
                    return "ö";
                case "1000000":
                    return "þ";
                case "10000001":
                    return "Æ";
                case "10000010":
                    return "Ö";
                case "10000011":
                    return "ð";
                case "10000100":
                    return "Ð";
                case "10000101":
                    return "é";
                case "10000110":
                    return "É";
                case "10000111":
                    return "ó";
                case "10001000":
                    return "Ó";
                case "10001001":
                    return "á";
                case "10001010":
                    return "Á";
                case "10001011":
                    return "ú";
                case "10001100":
                    return "Ú";
                case "10001101":
                    return "í";
                case "10001110":
                    return "Í";
                case "10001111":
                    return "CAPS LOCK";
                case "10010000":
                    return "NUM LOCK";
                case "10010001":
                    return "PRINTSCREEN";
                default:
                    return string.Empty;
            };
        }

        private static string BoolsToString(List<bool> keys)
        {
            return string.Join(string.Empty,keys.ConvertAll<string>(k => k ? "1" : "0"));
        }
    }
}
